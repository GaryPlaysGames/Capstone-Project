using UnityEngine;
using System.Collections;

public class PlayerInvulnerabilityAnim : MonoBehaviour {

    [SerializeField]
    private SpriteRenderer[] _playerSprites;

    private float _time;
    private float _numOfSprites;

    private void Awake() {
        _numOfSprites = _playerSprites.Length;
    }

    private void OnEnable() {
        PlayerHealth.StartInvulnAnim += StartAnimation;
    }

    private void OnDisable() {
        PlayerHealth.StartInvulnAnim -= StartAnimation;
    }

    private void StartAnimation(float recoveryTime) {
        _time = recoveryTime;
        StartCoroutine(Animate());
    }

    private IEnumerator Animate() {

        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
        Hide();
        yield return new WaitForSeconds(_time / 10.0f);
        Show();
        yield return new WaitForSeconds(_time / 10.0f);
    }

    private void Hide() {
        for (int i = 0; i < _numOfSprites; ++i) {
            _playerSprites[i].enabled = false;
        }
    }

    private void Show() {
        for (int i = 0; i < _numOfSprites; ++i) {
            _playerSprites[i].enabled = true;
        }
    }
}
